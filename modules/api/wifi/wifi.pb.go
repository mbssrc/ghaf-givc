// Copyright 2024 TII (SSRC) and the Ghaf contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.1
// source: wifi/wifi.proto

package wifi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_wifi_wifi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{0}
}

type WifiNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkName   string                 `protobuf:"bytes,1,opt,name=NetworkName,proto3" json:"NetworkName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiNetworkRequest) Reset() {
	*x = WifiNetworkRequest{}
	mi := &file_wifi_wifi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetworkRequest) ProtoMessage() {}

func (x *WifiNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetworkRequest.ProtoReflect.Descriptor instead.
func (*WifiNetworkRequest) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{1}
}

func (x *WifiNetworkRequest) GetNetworkName() string {
	if x != nil {
		return x.NetworkName
	}
	return ""
}

type WifiConnectionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SSID          string                 `protobuf:"bytes,1,opt,name=SSID,proto3" json:"SSID,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Settings      string                 `protobuf:"bytes,3,opt,name=Settings,proto3" json:"Settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiConnectionRequest) Reset() {
	*x = WifiConnectionRequest{}
	mi := &file_wifi_wifi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectionRequest) ProtoMessage() {}

func (x *WifiConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectionRequest.ProtoReflect.Descriptor instead.
func (*WifiConnectionRequest) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{2}
}

func (x *WifiConnectionRequest) GetSSID() string {
	if x != nil {
		return x.SSID
	}
	return ""
}

func (x *WifiConnectionRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *WifiConnectionRequest) GetSettings() string {
	if x != nil {
		return x.Settings
	}
	return ""
}

type AccessPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Connection    bool                   `protobuf:"varint,1,opt,name=Connection,proto3" json:"Connection,omitempty"`
	SSID          string                 `protobuf:"bytes,2,opt,name=SSID,proto3" json:"SSID,omitempty"`
	Signal        uint32                 `protobuf:"varint,3,opt,name=Signal,proto3" json:"Signal,omitempty"`
	Security      string                 `protobuf:"bytes,4,opt,name=Security,proto3" json:"Security,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessPoint) Reset() {
	*x = AccessPoint{}
	mi := &file_wifi_wifi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPoint) ProtoMessage() {}

func (x *AccessPoint) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPoint.ProtoReflect.Descriptor instead.
func (*AccessPoint) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{3}
}

func (x *AccessPoint) GetConnection() bool {
	if x != nil {
		return x.Connection
	}
	return false
}

func (x *AccessPoint) GetSSID() string {
	if x != nil {
		return x.SSID
	}
	return ""
}

func (x *AccessPoint) GetSignal() uint32 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *AccessPoint) GetSecurity() string {
	if x != nil {
		return x.Security
	}
	return ""
}

type WifiNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Networks      []*AccessPoint         `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiNetworkResponse) Reset() {
	*x = WifiNetworkResponse{}
	mi := &file_wifi_wifi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetworkResponse) ProtoMessage() {}

func (x *WifiNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetworkResponse.ProtoReflect.Descriptor instead.
func (*WifiNetworkResponse) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{4}
}

func (x *WifiNetworkResponse) GetNetworks() []*AccessPoint {
	if x != nil {
		return x.Networks
	}
	return nil
}

type WifiConnectionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      string                 `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WifiConnectionResponse) Reset() {
	*x = WifiConnectionResponse{}
	mi := &file_wifi_wifi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WifiConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectionResponse) ProtoMessage() {}

func (x *WifiConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_wifi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectionResponse.ProtoReflect.Descriptor instead.
func (*WifiConnectionResponse) Descriptor() ([]byte, []int) {
	return file_wifi_wifi_proto_rawDescGZIP(), []int{5}
}

func (x *WifiConnectionResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

var File_wifi_wifi_proto protoreflect.FileDescriptor

var file_wifi_wifi_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x69, 0x66, 0x69, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x22, 0x0e,
	0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x36,
	0x0a, 0x12, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x53, 0x53, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53,
	0x53, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x75, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x53,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x53, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x4b, 0x0a, 0x13, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x77, 0x69,
	0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x22,
	0x34, 0x0a, 0x16, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfc, 0x03, 0x0a, 0x0b, 0x57, 0x69, 0x66, 0x69, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x12, 0x1f, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x77, 0x69,
	0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x22, 0x2e, 0x77, 0x69, 0x66, 0x69,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x19, 0x2e, 0x77, 0x69, 0x66, 0x69,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x06, 0x54,
	0x75, 0x72, 0x6e, 0x4f, 0x6e, 0x12, 0x19, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x57,
	0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x07, 0x54, 0x75, 0x72, 0x6e, 0x4f,
	0x66, 0x66, 0x12, 0x19, 0x2e, 0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x77, 0x69, 0x66, 0x69, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x66, 0x69,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x67, 0x69, 0x76, 0x63, 0x2f, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wifi_wifi_proto_rawDescOnce sync.Once
	file_wifi_wifi_proto_rawDescData = file_wifi_wifi_proto_rawDesc
)

func file_wifi_wifi_proto_rawDescGZIP() []byte {
	file_wifi_wifi_proto_rawDescOnce.Do(func() {
		file_wifi_wifi_proto_rawDescData = protoimpl.X.CompressGZIP(file_wifi_wifi_proto_rawDescData)
	})
	return file_wifi_wifi_proto_rawDescData
}

var file_wifi_wifi_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_wifi_wifi_proto_goTypes = []any{
	(*EmptyRequest)(nil),           // 0: wifimanager.EmptyRequest
	(*WifiNetworkRequest)(nil),     // 1: wifimanager.WifiNetworkRequest
	(*WifiConnectionRequest)(nil),  // 2: wifimanager.WifiConnectionRequest
	(*AccessPoint)(nil),            // 3: wifimanager.AccessPoint
	(*WifiNetworkResponse)(nil),    // 4: wifimanager.WifiNetworkResponse
	(*WifiConnectionResponse)(nil), // 5: wifimanager.WifiConnectionResponse
}
var file_wifi_wifi_proto_depIdxs = []int32{
	3, // 0: wifimanager.WifiNetworkResponse.networks:type_name -> wifimanager.AccessPoint
	1, // 1: wifimanager.WifiService.ListNetwork:input_type -> wifimanager.WifiNetworkRequest
	0, // 2: wifimanager.WifiService.GetActiveConnection:input_type -> wifimanager.EmptyRequest
	2, // 3: wifimanager.WifiService.ConnectNetwork:input_type -> wifimanager.WifiConnectionRequest
	0, // 4: wifimanager.WifiService.DisconnectNetwork:input_type -> wifimanager.EmptyRequest
	0, // 5: wifimanager.WifiService.TurnOn:input_type -> wifimanager.EmptyRequest
	0, // 6: wifimanager.WifiService.TurnOff:input_type -> wifimanager.EmptyRequest
	4, // 7: wifimanager.WifiService.ListNetwork:output_type -> wifimanager.WifiNetworkResponse
	3, // 8: wifimanager.WifiService.GetActiveConnection:output_type -> wifimanager.AccessPoint
	5, // 9: wifimanager.WifiService.ConnectNetwork:output_type -> wifimanager.WifiConnectionResponse
	5, // 10: wifimanager.WifiService.DisconnectNetwork:output_type -> wifimanager.WifiConnectionResponse
	5, // 11: wifimanager.WifiService.TurnOn:output_type -> wifimanager.WifiConnectionResponse
	5, // 12: wifimanager.WifiService.TurnOff:output_type -> wifimanager.WifiConnectionResponse
	7, // [7:13] is the sub-list for method output_type
	1, // [1:7] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wifi_wifi_proto_init() }
func file_wifi_wifi_proto_init() {
	if File_wifi_wifi_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wifi_wifi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wifi_wifi_proto_goTypes,
		DependencyIndexes: file_wifi_wifi_proto_depIdxs,
		MessageInfos:      file_wifi_wifi_proto_msgTypes,
	}.Build()
	File_wifi_wifi_proto = out.File
	file_wifi_wifi_proto_rawDesc = nil
	file_wifi_wifi_proto_goTypes = nil
	file_wifi_wifi_proto_depIdxs = nil
}
